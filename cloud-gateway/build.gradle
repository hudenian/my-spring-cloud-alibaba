plugins {
    id 'distribution'
}

bootJar {
    enabled = true
}

configurations {
    implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-undertow'
    testImplementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-test'
    implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    implementation.exclude group: 'javax.servlet', module: 'javax.servlet-api'
    implementation.exclude group: 'javax.servlet', module: 'jstl'
    implementation.exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-jasper'
}

dependencies {
    api project(':cloud-common')
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'



    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
    implementation 'com.alibaba.cloud:spring-cloud-alibaba-sentinel-gateway'
//    implementation 'com.alibaba.csp:spring-cloud-alibaba-sentinel-gateway'
//    implementation 'com.alibaba.csp:sentinel-spring-cloud-gateway-adapter:x.y.z'
}

//docker {
//    registryCredentials {
//        url = "${dockerUrl}"
//        username = "${dockerUsername}"
//        password = "${dockerPassword}"
//        email = "${dockerEmail}"
//    }
//    springBootApplication {
//        baseImage = "${dockerBaseImage}"
//        maintainer = "${dockerMaintainer}"
//        ports = [8400]
//        images = ["micyo202/${project.name}:${project.version}"]
//        jvmArgs = ['-Dspring.profiles.active=$env', '-Djava.security.egd=file:/dev/./urandom', '-Xmx512m']
//        mainClassName = "${project.mainClassName}"
//    }
//}
